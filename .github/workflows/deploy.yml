name: Deploy to Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: corepack enable
      - uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Set up Nuxt UI Pro license
        run: |
          echo "NUXT_UI_PRO_LICENSE=${{ secrets.NUXT_UI_PRO_LICENSE }}" > .env
        env:
          NUXT_UI_PRO_LICENSE: ${{ secrets.NUXT_UI_PRO_LICENSE }}

      - name: Install dependencies
        run: npm install

      - name: Build Nuxt.js app
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ARTIFACT_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p 22 ${{ secrets.HOST }} >> ~/.ssh/known_hosts
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Deploy to server
        run: |
          sshpass -p '${{ secrets.PSWD }}' ssh -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.HOST }} << 'ENDSSH'
          cd ${{ secrets.APP_PATH }}
          git pull origin main
          docker stop ${{ secrets.APP_NAME }} || true
          docker rm ${{ secrets.APP_NAME }} || true
          docker system prune -f
          docker build -t ${{ secrets.APP_NAME }} .
          docker run --name ${{ secrets.APP_NAME }} -d -p ${{ secrets.APP_PORT }}:${{ secrets.APP_PORT }} ${{ secrets.APP_NAME }}
          ENDSSH
